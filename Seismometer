import numpy as np
import matplotlib.pyplot as plt

# Function defining exponentially decaying sinusoidal

def thetaU(t, A, w0, Q, phi):
    wu = w0 * np.sqrt(1.0-1.0/(4.0*Q*Q))

    return A * np.exp(-0.5*w0*t/Q) * np.sin(wu*t + phi)

#User sets these parameters to best match the data

A = 0.12 # Amplitude
T = 17.0 # Period (w0 = 2 pi / T)
Q = 10.0 # Q = quality factor (determines damping)

phase = 90. # phase in degrees

#Convert phase in degrees to phase in radius for use in function

phi = np.pi * phase / 180.0 # phase in radians

(Time, Voltage1, Voltage2, Voltage3, Voltage4, Voltage5, Voltage6) = np.loadtxt("Lab_8_commasep.txt", 
                                                                                skiprows=50, 
                                                                                unpack=True, 
                                                                                usecols=(0,1,2,3,4,5,6))

fit = thetaU(Time, 0.038, 2.0*np.pi/1.8, 20, np.pi)
plt.plot(Time, Voltage1, "b-", Time, fit, "k--")
plt.axhline(color="black")
plt.title("0 cm Voltage over Time")
plt.xlabel("Time (s)")
plt.xlim(0,35)
plt.ylabel("Voltage (V)")
plt.show()

fit = thetaU(Time, 0.045, 2.0*np.pi/1.81, 20, 0)
plt.plot(Time, Voltage2, "r-", Time, fit, "k--")
plt.axhline(color="black")
plt.title("6 cm Voltage over Time")
plt.xlabel("Time (s)")
plt.xlim(0,35)
plt.ylabel("Voltage (V)")
plt.show()

fit = thetaU(Time, 0.035, 2.0*np.pi/1.84, 25, 0)
plt.plot(Time, Voltage3, "g-", Time, fit, "k--")
plt.axhline(color="black")
plt.title("12 cm Voltage over Time")
plt.xlabel("Time (s)")
plt.xlim(0,35)
plt.ylabel("Voltage (V)")
plt.show()

fit = thetaU(Time, 0.03, 2.0*np.pi/1.84, 35, phi)
plt.plot(Time, Voltage4, "c-", Time, fit, "k--")
plt.axhline(color="black")
plt.title("18 cm Voltage over Time")
plt.xlabel("Time (s)")
plt.xlim(0,35)
plt.ylabel("Voltage (V)")
plt.show()

fit = thetaU(Time, 0.02, 2.0*np.pi/1.84, 43, 0)
plt.plot(Time, Voltage5, "orange", Time, fit, "k--")
plt.axhline(color="black")
plt.title("24 cm Voltage over Time")
plt.xlabel("Time (s)")
plt.xlim(0,35)
plt.ylabel("Voltage (V)")
plt.show()

fit = thetaU(Time, 0.008, 2.0*np.pi/1.85, 50, phi)
plt.plot(Time, Voltage6, "violet", Time, fit, "k--")
plt.axhline(color="black")
plt.title("30cm Voltage over Time")
plt.xlabel("Time (s)")
plt.xlim(0,35)
plt.ylabel("Voltage (V)")
plt.ylim(-0.015, 0.015)
plt.show()
